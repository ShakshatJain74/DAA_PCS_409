#include <iostream>
using namespace std;
pair<int, int> count_occurrences(int arr[], int n, int key) {
    int count = 0;
    int left = 0;
    int right = n - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == key) {
            count = 1;
            int i = mid - 1;
            while (i >= 0 && arr[i] == key) {
                count++;
                i--;
            }

            i = mid + 1;
            while (i < n && arr[i] == key) {
                count++;
                i++;
            }

            return make_pair(key, count);
        } else if (arr[mid] < key) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return make_pair(-1, 0); // Key not found
}

int main() {
    int T;
    cin >> T;
    while (T--) {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        int key;
        cin >> key;
        pair<int, int> result = count_occurrences(arr, n, key);
        if (result.second > 0) {
            cout << result.first << " - " << result.second << endl;
        } else {
            cout << "Key not present" << endl;
        }
    }
    return 0;
}
